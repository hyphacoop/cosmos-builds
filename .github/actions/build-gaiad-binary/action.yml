name: "Build Gaia Binary"
description: "Builds the Gaia binary from a ref and uploads it as an artifact."
inputs:
  ref:
    description: "The ref to build the Gaia binary from."
    required: true
    default: "main"
  release_name:
    description: "The name of the release."
    required: true
    default: "gaiad-linux-main"
  remote_commit_sha:
    description: "The sha of the latest commit on the main branch."
    required: true
  github_token:
    description: "The GitHub token."
    required: true
  bot_token:
    description: "The GitHub token for the bot."
    required: true
  go_version:
    description: "The go version to download and use."
    required: true
runs:
  using: "composite"
  steps:

      - name: Install tools
        shell: bash
        run: |
          sudo apt-get install curl jq -y

      - name: Setup environment
        shell: bash
        run: |
          sudo apt install build-essential wget -y

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Clone and build Gaia
        shell: bash
        run: |
          go version
          export GOTOOLCHAIN=go${{ inputs.go_version }}
          git clone https://github.com/cosmos/gaia.git
          cd gaia
          git checkout ${{ inputs.ref }}
          make build-static-linux-amd64
          cp build/gaiad-linux-amd64/gaiad ~/gaiad-linux
      
      - name: Print gaia version
        shell: bash
        run: |
          ~/gaiad-linux version

      - name: Trim commit SHA
        id: trim_sha
        run: |
          sha=${{ inputs.remote_commit_sha }}
          echo "short_sha=${sha:0:7}" >> $GITHUB_ENV
        shell: bash

      - name: Add release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "~/gaiad-linux"
          name: ${{ inputs.remote_commit_sha }}
          bodyFile: .github/workflows/gaiad-linux-main-body.md
          prerelease: true
          replacesArtifacts: false
          allowUpdates: false
          tag: ${{ env.short_sha }}
          token: ${{ inputs.github_token }}
          skipIfReleaseExists: true
          artifactErrorsFailBuild: true
          makeLatest: true
          commit: ${{ github.sha }}

      - name: Dispatch to cosmos-release-testing repo
        shell: bash
        env:
          SECRET_TOKEN: ${{ inputs.bot_token }}
        run: |
          curl -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer $SECRET_TOKEN" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/hyphacoop/cosmos-release-testing/dispatches \
          -d '{"event_type":"new_main_build","client_payload":{}}'
